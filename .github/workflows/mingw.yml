name: mingw 

on: [push]

jobs:
  build:
    name: build

    strategy:
      matrix:
        os: [windows-latest]
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: [Release, Debug]

    defaults:
      run:
        shell: cmd
        
    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      SOURCE_DIR:  ${{github.workspace}}\.cache\source
      TOOSL_DIR:   ${{github.workspace}}\.cache\tools
      INSTALL_DIR: ${{github.workspace}}\.cache\install_mingw_2022_02_15
      QFtpServer_VERSION: v0.0.18

    steps:
    - uses: actions/checkout@v2
      #with:
        #fetch-depth: 0
            
    - name: pacman
      env:
        PATH: C:\msys64\usr\bin
      run: | 
        C:\msys64\usr\bin\pacman.exe -S --noconfirm mingw-w64-x86_64-cmake ^
            mingw-w64-x86_64-make ^
            mingw-w64-x86_64-nsis ^
            mingw-w64-x86_64-gcc ^
            mingw-w64-x86_64-qt5 ^
            mingw-w64-x86_64-zlib ^
            git base-devel

    - name: make_directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}
    
    - name: Cache installed
      uses: actions/cache@v2
      id: cache-installed
      with:
        path: |
          ${{env.INSTALL_DIR}}
        key: cache-installed-mingw
        
    - name: git clone RabbitCommon
      working-directory: ${{env.SOURCE_DIR}}
      run: git clone https://github.com/KangLin/RabbitCommon.git

    - name: build log4qt
      working-directory: ${{env.SOURCE_DIR}}
      env:
        MSYSTEM: MINGW64
        PATH: C:\msys64\mingw64\bin;C:\msys64\usr\bin
      run: |
        IF NOT EXIST ${{env.INSTALL_DIR}}\lib\cmake\Log4Qt (
            git clone -b v1.5.1 "https://github.com/MEONMedical/Log4Qt.git"
            cd Log4Qt
            cmake -E make_directory build
            cd build
            cmake .. -G"MinGW Makefiles" -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
                -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}}
            cmake --build . --config ${{matrix.BUILD_TYPE}}
            cmake --build . --config ${{matrix.BUILD_TYPE}} --target install
        )

    - name: build QFtpServer
      working-directory: ${{github.workspace}}
      env:
        RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        #Qt5_Dir: C:\msys64\mingw64
        MSYSTEM: MINGW64
        PATH: C:\msys64\mingw64\bin;C:\msys64\usr\bin
      run: |
        cmake -E make_directory build
        cd build
        cmake .. -G"MinGW Makefiles" ^
            -DCMARK_SHARED=OFF ^
            -DCMARK_TESTS=OFF ^
            -DCMARK_STATIC=ON ^
            -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}} ^
            -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/install ^
            -DLog4Qt_DIR=/lib/cmake/Log4Qt ^
            -DCMAKE_PREFIX_PATH=${{env.INSTALL_DIR}}
        cmake --build . --config ${{ matrix.BUILD_TYPE }}
        cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install-runtime

    - name: Package
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config ${{ matrix.BUILD_TYPE }} --target install-runtime
        move /Y install\plugins\*crypto*.dll install\bin
        move /Y install\plugins\*ssl*.dll install\bin
        copy /Y C:\msys64\mingw64\bin\*.dll install\bin
        copy /Y ${{env.INSTALL_DIR}}\bin\*.dll install\bin
        copy /Y ${{env.INSTALL_DIR}}\lib\*.dll install\bin
        copy /Y ${{env.RUNVCPKG_VCPKG_ROOT}}\installed\${{env.RUNVCPKG_VCPKG_TRIPLET_OUT}}\bin\*.dll install\bin
        makensis ${{github.workspace}}/build/Install.nsi
      if: ${{ matrix.BUILD_TYPE == 'Release' }}

    - name: update
      uses: actions/upload-artifact@v2
      with:
        name: QFtpServer_${{ matrix.os }}_mingw
        path: |
          ${{github.workspace}}/build/QFtpServer_Setup_${{env.QFtpServer_VERSION}}.exe
      if: ${{ matrix.BUILD_TYPE == 'Release' }}
